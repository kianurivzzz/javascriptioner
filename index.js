#!/usr/bin/env node

import chalk from 'chalk';
import chalkAnimation from 'chalk-animation';
import figlet from 'figlet';
import gradient from 'gradient-string';
import inquirer from 'inquirer';
import { createSpinner } from 'nanospinner';

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏–≥—Ä–æ–∫–∞
let playerName;

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Ä–µ–º–µ–Ω–∏
 * @param {number} ms - –ß–∏—Å–ª–æ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * @returns {Promise<void>} - –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏
 */
const sleep = (ms = 2000) => new Promise(r => setTimeout(r, ms));

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
const welcome = async () => {
	// –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ "–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º?" —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ chalk-animation
	const rainbowTitle = chalkAnimation.rainbow(
		'–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º? \n'
	);

	// –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã
	await sleep();

	// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
	rainbowTitle.stop();

	// –í—ã–≤–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	console.log(`
    ${chalk.bgBlue('–ö–∞–∫ –∏–≥—Ä–∞—Ç—å?')}
    –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –∫–≤–∏–∑ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ".
    –ï—Å–ª–∏  –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—à—å –Ω–∞ –≤–æ–ø—Ä–æ—Å, —Ç–æ–≥–¥–∞ ${chalk.bgRed('–ø—Ä–æ–∏–≥—Ä–∞–µ—à—å')}
    –ü–æ—ç—Ç–æ–º—É, —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ.
  `);
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {boolean} isCorrect - –ò—Å—Ç–∏–Ω–∞, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
 * @returns {Promise<void>} - –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const handleAnswer = async isCorrect => {
	// –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏–Ω–Ω–µ—Ä–∞
	const spinner = createSpinner('–ü—Ä–æ–≤–µ—Ä—è—é –æ—Ç–≤–µ—Ç...').start();

	// –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã
	await sleep();

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	if (isCorrect) {
		// –í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
		spinner.success({
			text: `‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, ${playerName}. –ú–æ–ª–æ–¥–µ—Ü!`,
		});
	} else {
		// –í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
		spinner.error({ text: `–≠—Ç–æ –∫–æ–Ω–µ—Ü, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª ${playerName}!üíÄ` });
		// –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã
		process.exit(1);
	}
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Promise<void>} - –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const askName = async () => {
	// –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const answers = await inquirer.prompt({
		name: 'player_name',
		type: 'input',
		message: '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?',
		default() {
			return '–ò–≥—Ä–æ–∫';
		},
	});

	// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	playerName = answers.player_name;
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–±–µ–¥—ã
 */
const winner = () => {
	// –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏
	console.clear();

	// –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ "1 0 0 0 0 0 0" —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ chalk
	figlet(`1 0 0 0 0 0 0`, (error, data) => {
		console.log(gradient.pastel.multiline(data) + '\n');

		// –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–±–µ–¥–µ
		console.log(chalk.green(`–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–ø–µ—Ä—å —Ç—ã –¥–∂–∞–≤–∞—Å–∫—Ä–∏–ø—Ç–∏–æ–Ω–µ—Ä! `));

		// –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã
		process.exit(0);
	});
};

// –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
const question1 = async () => {
	const answers = await inquirer.prompt({
		name: 'question_1',
		type: 'list',
		message: '–ö–æ–≥–¥–∞ –±—ã–ª —Å–æ–∑–¥–∞–Ω JavaScript?\n',
		choices: [
			'25 –º–∞—è, 1995 –≥–æ–¥–∞',
			'24 –Ω–æ—è–±—Ä—è, 1995 –≥–æ–¥–∞',
			'4 –¥–µ–∫–∞–±—Ä—è, 1995 –≥–æ–¥–∞',
			'17 —è–Ω–≤–∞—Ä—è, 1997 –≥–æ–¥–∞',
		],
	});

	return handleAnswer(answers.question_1 === '4 –¥–µ–∫–∞–±—Ä—è, 1995 –≥–æ–¥–∞');
};

// –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
const question2 = async () => {
	const answers = await inquirer.prompt({
		name: 'question_2',
		type: 'list',
		message:
			'–ö–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç —É –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã number? const number = 1_1 + "1" + Number(1)\n',
		choices: ['3', '"3"', '"1111"', '142345'],
	});
	return handleAnswer(answers.question_2 === '"1111"');
};

// –¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
const question3 = async () => {
	const answers = await inquirer.prompt({
		name: 'question_3',
		type: 'list',
		message: `–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—ã–≤–µ—Å—Ç–∏ 4-–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞? ['üíÄ', 'üî•', 'üëÅÔ∏è']\n`,
		choices: ['0', 'üëÅÔ∏è', 'üíÄ', 'undefined'],
	});

	return handleAnswer(answers.question_3 === 'undefined');
};

// –ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å
const question4 = async () => {
	const answers = await inquirer.prompt({
		name: 'question_4',
		type: 'list',
		message: '–ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ù–ï –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–π?\n',
		choices: ['boolean', 'number', 'NaN', 'object'],
	});
	return handleAnswer(answers.question_4 === 'object');
};

// –ü—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å
const question5 = async () => {
	const answers = await inquirer.prompt({
		name: 'question_5',
		type: 'list',
		message: `JavaScript ‚Äì —ç—Ç–æ –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π, –æ–¥–Ω–æ–ø–æ—Ç–æ—á–Ω—ã–π, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º—ã–π, –ø—Ä–æ—Ç–æ—Ç–∏–ø–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –º—É–ª—å—Ç–∏–ø–∞—Ä–∞–¥–∏–≥–º–∞–ª—å–Ω—ã–π, –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Å ___ event loop'–æ–º.`,
		choices: ['–º—É–ª—å—Ç–∏–ø–æ—Ç–æ—á–Ω—ã–º', '–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–º', '—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º', '–ø—Ä–æ–º–∏—Å–Ω—ã–º'],
	});

	return handleAnswer(answers.question_5 === '–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–º');
};

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã, —Ç–æ  –µ—Å—Ç—å –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π welcome, askName, question1, question2, question3, question4, question5, winner
console.clear();
await welcome();
await askName();
await question1();
await question2();
await question3();
await question4();
await question5();
winner();
